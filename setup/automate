#!/usr/bin/env zsh

set -e

# parse options {{{
usage() {
    cat <<- 'EOU'
		Usage: automate [options] [target directory]

		Options
		  -b, --branch BRANCH   git branch
		  -r, --repo REPO       clone from REPO
		  -h, --help            print this help message
	EOU
}


getopt_options=(
    branch:
    help
    repo:
)

if ! getopt_tmp=$(POSIXLY_CORRECT=true getopt -q -o b:hr: --long ${(j:,:)getopt_options} -- "$@"); then
    # exit if error
    usage
    exit 1
fi

eval set -- $getopt_tmp
unset getopt_options
unset getopt_tmp

readonly _DEFAULT_NMK_DIR=$HOME/.nmk
readonly _GITHUB_REPO='https://github.com/nuimk/nmk.git'
declare _BRANCH
declare _REPO=$_GITHUB_REPO

while true; do
    case $1 in
        -b | --branch ) _BRANCH=$2; shift 2 ;;
        -r | --repo ) _REPO=$2; shift 2 ;;
        -h | --help ) usage; exit 0 ;;
        -- ) shift; break ;;
    esac
done
readonly _BRANCH
readonly _REPO

declare _NMK_DIR
if [[ -n $1 ]]; then
    _NMK_DIR=${1:A}
    shift
else
    _NMK_DIR=$_DEFAULT_NMK_DIR
fi
readonly _NMK_DIR
# }}}

if [[ -d $_NMK_DIR ]]; then
    print -- "target directory: $_NMK_DIR already exist"
    exit 1
fi

if [[ -n $_BRANCH ]]; then
    git clone --quiet --branch $_BRANCH $_REPO $_NMK_DIR
else
    git clone --quiet $_REPO $_NMK_DIR
fi
cd $_NMK_DIR
git submodule init
git submodule --quiet update --recursive
git remote set-url origin $_GITHUB_REPO
NMK_DIR=$_NMK_DIR ./vim/update-plugins

